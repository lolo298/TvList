generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String      @id @default(uuid())
  username        String      @unique
  profilePicture  String
  statsId         String      @unique
  preferencesId   String      @unique
  list            List[]
  stats           Stats       @relation(fields: [statsId], references: [id])
  preferences     Preferences @relation(fields: [preferencesId], references: [id])
  watchedEpisodes Episode[]   @relation("EpisodeToUser")
  followedShows   Show[]      @relation("FollowedShows")
  lovedShows      Show[]      @relation("LovedShows")
}

model Stats {
  id              String @id @default(uuid())
  loved           Int
  followed        Int
  seriesWatchTime Int
  seriesWatched   Int
  moviesWatchTime Int
  moviesWatched   Int
  user            User?
}

enum DefaultPage {
  SERIES
  MOVIES
  SEARCH
}

model Preferences {
  id          String      @id @default(uuid())
  user        User?
  gridView    Boolean     @default(true)
  toWatch     Boolean     @default(true)
  defaultPage DefaultPage @default(SERIES)
}

model List {
  id     String @id @default(uuid())
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  Shows  Show[]
}

model Show {
  id         Int       @id @default(autoincrement())
  tmdbId     Int       @unique
  type       Show_Type
  adult      Boolean
  popularity Float
  name       String
  cover      String?
  listId     String?
  updatedAt  DateTime  @updatedAt
  seasons    Season[]
  list       List?     @relation(fields: [listId], references: [id])
  user       User[]    @relation("FollowedShows")
  lovedBy    User[]    @relation("LovedShows")

  @@index([tmdbId, type], name: "tmdb_type_index")
}

model Season {
  id        Int       @id @default(autoincrement())
  tmdbId    Int       @unique
  number    Int
  showId    Int
  updatedAt DateTime  @updatedAt
  episodes  Episode[]
  show      Show      @relation(fields: [showId], references: [id])
}

model Episode {
  id        Int      @id @default(autoincrement())
  tmdbId    Int      @unique
  number    Int
  seasonId  Int
  name      String
  cover     String?
  duration  Int?
  updatedAt DateTime @updatedAt
  season    Season   @relation(fields: [seasonId], references: [id])
  User      User[]   @relation("EpisodeToUser")
}

enum Show_Type {
  MOVIE
  SERIES
}
